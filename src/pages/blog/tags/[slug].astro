---
import Layout from '../../../layouts/Page.astro'
import { Container } from '@littlesticks/odyssey-theme-components';
import {generateTagData} from '../../../utils/helpers.js'
import { BlogPostsList } from '../../../components/BlogPostList.astro';
import { ThemeSwitcher } from '../../../components/theme-switcher/theme-switcher';
import settings from '../../../config/settings';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.mdx');
  const sortedPosts = allPosts.sort((a, b) => new Date(b.frontmatter.date).valueOf() - new Date(a.frontmatter.date).valueOf());
  const allCategoriesUnique = new Set();
  
  sortedPosts.forEach(post => {
    post.frontmatter.tags && post.frontmatter.tags.map(tag => {
      allCategoriesUnique.add(tag);
    })
  })
  
  const allCategoriesData = generateTagData(allCategoriesUnique);
   // map through the categories array
  return allCategoriesData.map((tag) => {
    // filter the posts that match the given category
    const posts = sortedPosts.filter((post) => post.frontmatter.tags.includes(tag.title))
      return {
      params: {slug: tag.slug}, 
      props: {
        tag: tag.title, 
        posts: posts
      }
    };
  });
}

const {tag, posts} = Astro.props;

const seo ={
  title: `${tag} | Kieran Wood | Philosophy`,
}

let filteredPosts = []

const getPath = function (path){
  let pathParts = path.split('/')
  return pathParts[pathParts.length - 2]
}

posts.map(post => (
  filteredPosts.push({...post.frontmatter, "href":`/philosophy/blog/posts/${getPath(post.frontmatter.featuredImage)}`})
  ))

filteredPosts.sort((a, b) => new Date(b.publishDate).valueOf() - new Date(a.publishDate).valueOf())

---
<Layout seo={seo}>
  <Container>

    <section class="blog-posts-list__section">
      <h1>Posts Tagged with "{tag}"</h1>

			<BlogPostsList posts={filteredPosts} />
		</section>
  </Container>
  {settings.enableThemeSwitcher && <ThemeSwitcher client:load/>}
</Layout>
